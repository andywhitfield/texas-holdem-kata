- The interface has two related methods, 'deal' and 'holeCards' which
mean having to keep track of the 'last player' in an instance variable.
Could make this interface better.

- Repetitive code for the dealTurn, dealRiver implementations.

- The community cards are added to each players list of cards. Is the
model correct? Perhaps we need to add the concept of a 'deal'.

- PokerRound results method getting unwieldy.

- PokerRound now has three collections containing players names. Possibly
missing some abstraction here.

- The map of players and their cards is passed from the round to the
RoundWinners class - as noted above, perhaps we need a better abstraction
of this collection?

- HandRanking class needs some work.

- Tne RoundWinners class is a little improved - however I need to remove
the highest card check - doesn't really belong here anymore - but should
it all be handled by the rank? The part about the highest card is really
resolving the best hand within the same rank - so perhaps is separate,
but could be extracted into a JointHandResolver class, or something similar.

- Make use of Google collections?